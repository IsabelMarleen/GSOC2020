from sbol2 import *

setHomespace('http://sys-bio.org')
doc = Document()
Config.setOption('sbol_typed_uris', False)

gene = ComponentDefinition('gene_example')
GFP = ComponentDefinition('GFP')
LacY = ComponentDefinition('LacY')

GFP.roles = SO_CDS
LacY.roles = SO_CDS

doc.addComponentDefinition(gene)
doc.addComponentDefinition([GFP, LacY])

gene.assemblePrimaryStructure([GFP, LacY])

first = gene.getFirstComponent()
print(first.identity)
last = gene.getLastComponent()
print(last.identity)

sequence1= """atgcgtaaaggagaagaacttttcactggagttgtcccaattcttgttgaattagatggtgatgttaatgg
gcacaaattttctgtcagtggagagggtgaaggtgatgcaacatacggaaaacttacccttaaatttatttgcactactggaaaac
tacctgttccatggccaacacttgtcactactttcggttatggtgttcaatgctttgcgagatacccagatcatatgaaacagcat
gactttttcaagagtgccatgcccgaaggttatgtacaggaaagaactatatttttcaaagatgacgggaactacaagacacgtgct
gaagtcaagtttgaaggtgatacccttgttaatagaatcgagttaaaaggtattgattttaaagaagatggaaacattcttggacac
aaattggaatacaactataactcacacaatgtatacatcatggcagacaaacaaaagaatggaatcaaagttaacttcaaaattagac
acaacattgaagatggaagcgttcaactagcagaccattatcaacaaaatactccaattggcgatggccctgtccttttaccagacaa
ccattacctgtccacacaatctgccctttcgaaagatcccaacgaaaagagagaccacatggtccttcttgagtttgtaacagctgct
gggattacacatggcatggatgaactatacaaataataa"""

sequence2 = """atgtctgcccgtatttcgcgtaaggaaatccattatgtactatttaaaaaacacaaacttttg
gatgttcggtttattctttttcttttacttttttatcatgggagcctacttcccgtttttcccgatttggctacatgacatcaaccata
tcagcaaaagtgatacgggtattatttttgccgctatttctctgttctcgctattattccaaccgctgtttggtctgctttctgacaa
actcgggctgcgcaaatacctgctgtggattattaccggcatgttagtgatgtttgcgccgttctttatttttatcttcgggccactgt
tacaatacaacattttagtaggatcgattgttggtggtatttatctaggcttttgttttaacgccggtgcgccagcagtagaggcatt
tattgagaaagtcagccgtcgcagtaatttcgaatttggtcgcgcgcggatgtttggctgtgttggctgggcgctgtgtgcctcgatt
tcggcatcatgttcaccatcaataatcagtttgttttctggctgggctctggctgtgcactcatcctcgccgttttactctttttcgcc
aaaacggatgcgccctcttctgccacggttgccaatgcggtaggtgccaaccattcggcatttagccttaagctggcactggaactgtt
cagacagccaaaactgtggtttttgtcactgtatgttattggcgtttcctgcacctacgatgtttttgaccaacagtttgctaatttc
tttacttcgttctttgctaccggtgaacagggtacgcgggtatttggctacgtaacgacaatgggcgaattacttaacgcctcgatta
tgttctttgcgccactgatcattaatcgcatcggtgggaaaaacgccctgctgctggctggcactattatgtctgtacgtattattggc
tcatcgttcgccacctcagcgctggaagtggttattctgaaaacgctgcatatgtttgaagtaccgttcctgctggtgggctgcttta
aatatattaccagccagtttgaagtgcgtttttcagcgacgatttatctggtctgtttctgcttctttaagcaactggcgatgatttt
tatgtctgtactggcgggcaatatgtatgaaagcatcggtttccagggcgcttatctggtgctgggtctggtggcgctgggcttcacc
ttaatttccgtgttcacgcttagcggccccggcccgctttccctgctgcgtcgtcaggtgaatgaagtcgcttaa"""

sequence1 = "".join(sequence1.split())
sequence1 = sequence1.replace( u"\ufeff", "")
sequence2 = "".join(sequence2.split())
sequence2 = sequence2.replace( u"\ufeff", "")

GFP.sequence = Sequence('GFP_seq', sequence1, SBOL_ENCODING_IUPAC)
LacY.sequence = Sequence('LacY_seq', sequence2, SBOL_ENCODING_IUPAC)

target_sequence = gene.compile()

gene.roles = [SO_GENE]

#Export
doc.write('SBOL_example.xml')
